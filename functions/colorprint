function colorprint () {
#   @desc echoes a bunch of color codes to the
#   terminal to demonstrate what's available.  Each
#   line is the color code of one forground color,
#   out of 17 (default + 16 escapes), followed by a
#   test use of that color on all nine background
#   colors (default + 8 escapes).
	local T='gYw'
	local colors=('' 'Black' 'Red' 'Green' 'Yellow' 'Blue' 'Magenta' 'Cyan' 'White')
	local LIGHT_DARK=('' 'Bright')
	# Ascii escape char is 27, Hex \x1B, Octal 033
	printf "\n                 40m     41m     42m     43m     44m     45m     46m     47m\n"
	
	local FGS=('    m' '   1m' '  30m' '1;30m' '  31m' '1;31m' '  32m' '1;32m' '  33m' '1;33m' '  34m' '1;34m' '  35m' '1;35m' '  36m' '1;36m' '  37m' '1;37m')
	
	# Loop through array indices (ZSH arrays start at 1)
	for (( i=1; i<=${#FGS[@]}; i++ ))
	do
		# Remove spaces from the ANSI code
		FG=${FGS[$i]// /}
		
		# Calculate color index (integer division)
		c=$(( (i + 1) / 2 ))
		
		# Calculate light/dark index
		if [[ $i -gt 2 ]]; then
			l=$(( i - 2 ))
		else
			l=0
		fi
		
		# Format the color name with proper spacing
		printf -v COLOR "%15s" "${LIGHT_DARK[$((l%2 + 1))]} ${colors[$c]}"
		
		# Print the foreground color sample
		printf " %s %s \033[%s  %s  " "$COLOR" "${FGS[$i]}" "$FG" "$T"
		
		# Print background color combinations
		for BG in 40m 41m 42m 43m 44m 45m 46m 47m
		do
			printf " \033[%s\033[%s  %s  \033[0m" "$FG" "$BG" "$T"
		done
		echo
	done
	echo
}
