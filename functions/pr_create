emulate -LR zsh
setopt typesetsilent extendedglob

pr_create() {

  # Type declarations with sophisticated host mapping
  typeset -A opts hosts
  typeset -a gh_opts
  typeset -r branch="${$(git branch --show-current):-unknown}"
  typeset title="" host_key="" host_val=""

  # Host mapping configuration
  hosts=(
    hulu     "github.prod.hulu.com"
    twdc     "github.twdcgrid.net"
    disney   "github.twdcgrid.net"
    bamgrid  "github.bamtech.co"
  )

  # Parse options with zparseopts
  zparseopts -D -E -A opts \
    -title:=title \
    -host:=host \
    h=help -help=help

  # Show help if requested
  if (( ${#help} )); then
    print -P "%F{blue}%BUsage:%b%f pr_create [options] [title]"
    print "  Creates a GitHub PR with smart title handling and host management"
    print
    print -P "%F{blue}%BOptions:%b%f"
    print "  --title=TITLE   Specify PR title (branch name will be prepended if not present)"
    print "  --host=HOST     Set GitHub host. Special values:"
    for key val in "${(@kv)hosts}"; do
      print "                  - $key → $val"
    done
    print "  -h, --help      Show this help message"
    print
    print "Any additional GitHub CLI options are passed through to 'gh pr create'."
    return 0
  fi

  # Process title from options or arguments
  if (( ${+opts[--title]} )); then
    title="${(q)opts[--title][-1]#*=}"
  elif (( $# > 0 )); then
    title="${(q)${*}}"
  fi

  echo "Title: ${(q)title}"

  # Process host with mapping logic
  if (( ${+opts[--host]} )); then
    host_key="${(q)opts[--host][-1]#*=}"
    host_val="${(q)hosts[$host_key]:-$host_key}"
  fi
  echo "${host_key}: ${host_val}"

  # Extract non-custom options for gh
  for k v in "${(@kv)opts}"; do
    case $k in
      --title|--host) continue ;;
      *) gh_opts+=("$k${v:+=$v}") ;;
    esac
  done

  echo "${gh_opts[@]}"

  # Intelligently handle title with branch name 
  if [[ -z "$title" ]]; then
    title="$branch: Updates"
  elif [[ "$title" != *"$branch"* && "$branch" != "unknown" ]]; then
    title="$branch: $title"
  fi

    # Build command array properly
  typeset -a cmd=(gh pr create --assignee=@me -w --title="${(q)title}")
  (( ${#gh_opts} )) && cmd+=("${gh_opts[@]}")
  
  # Execute with proper environment variable handling
  if [[ -n "$host_val" ]]; then
    echo "evaluating GH_HOST=\"$host_val\" ${cmd[@]}"
  	GH_HOST="$host_val" "${cmd[@]}"
    if [[ $? -gt 0 ]]; then
      print -P "%F{red}✗ Failed to create pull request%f"
      return 1
    fi
  else
  	"${cmd[@]}";
    if [[ $? -gt 0 ]]; then
      print -P "%F{red}✗ Failed to create pull request%f"
      return 1
    fi
  fi

  if [[ $? -eq 0 ]]; then
  	# Success feedback with detailed info
  	print -P "%F{green}✓ Pull request created:%f %B${title}%b"
  	[[ -n "$host_val" ]] && print -P "  Using host: %F{cyan}${host_val#GH_HOST=}%f"
  fi
  
  unsetopt warncreateglobal nounset
}
