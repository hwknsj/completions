#compdef launchctl

__launchctl_list_sigs ()
{
    echo {,SIG}{HUP,INT,QUIT,ILL,TRAP,ABRT,EMT,FPE,KILL,BUS,SEGV,SYS,PIPE,ALRM,TERM,URG,STOP,TSTP,CONT,CHLD,TTIN,TTOU,IO,XCPU,XFSZ,VTALRM,PROF,WINCH,INFO,USR1,USR2} `seq 1 31 | tr '\n' ' '`
}

__launchctl_list_pids ()
{
    command ps axo pid=
}

__launchctl_list_uids ()
{
    dscl . -list /Users UniqueID 2>/dev/null | awk '{print $2}'
}

join_list ()
{
    tr -d ' ' | tr '\n' ',' | sed -e 's/.$//'
}

__launchctl_list_domains ()
{
    echo {system,user,gui,login,session,pid}/
}

__launchctl_list_subdomains ()
{
    pids=$(echo echo pid/{$(__launchctl_list_pids | join_list)})
    pids=`eval $pids | tr ' ' ','`
    uids=$(echo echo {user,gui}/{$(__launchctl_list_uids | join_list)})
    uids=`eval $uids | tr ' ' ','`
    #asids=  {login,session}/{asids...}
    # eval $(echo echo {"system,${uids},${pids}"}/)
    echo system/ ${uids}/ ${pids}/
}

__launchctl_list_service_targets ()
{
    eval $(echo echo {`__launchctl_list_subdomains | tr ' ' ',' `}{`__launchctl_list_labels | join_list| tr ' ' ',' `})
}

__launchctl_list_labels ()
{
    launchctl list | awk 'NR>1 && $3 !~ /0x[0-9a-fA-F]+\.(anonymous|mach_init)/ {print $3}'
}

__launchctl_list_started ()
{
    launchctl list | awk 'NR>1 && $3 !~ /0x[0-9a-fA-F]+\.(anonymous|mach_init)/ && $1 !~ /-/ {print $3}'
}

__launchctl_list_stopped ()
{
    launchctl list | awk 'NR>1 && $3 !~ /0x[0-9a-fA-F]+\.(anonymous|mach_init)/ && $1 ~ /-/ {print $3}'
}
_launchctl ()
{
    local context state line
    typeset -A opt_args
    
    local cur="$words[CURRENT]"
    local prev="$words[CURRENT-1]"
    local two_prev="$words[CURRENT-2]"

    # Subcommand list
    local -a subcommands=(bootstrap bootout enable disable uncache kickstart attach debug kill blame print print-cache print-disabled plist procinfo hostinfo resolveport limit runstats examine config dumpstate reboot bootshell load unload remove list start stop setenv unsetenv getenv export getrusage shutdown umask bslist bstree bsexec asuser submit managerpid manageruid managername error variant version help)
    [[ $CURRENT -eq 2 ]] && {
        # compadd "${(@)=${subcommands}}"
        compadd "${subcommands[@]}"
        return
    }
    if [[ $CURRENT -eq 3 ]]; then
        case "$prev" in
            print|enable|disable|blame|runstats|bootstrap|bootout|print-disabled)
                if [[ ${cur} == */*/* ]]; then
                    compadd -S "" "${(@f)$(__launchctl_list_service_targets)}"
                elif [[ ${cur} == */* ]]; then
                    compadd -S "" "${(@f)$(__launchctl_list_subdomains)}"
                else
                    compadd -S "" "${(@f)$(__launchctl_list_domains)}"
                fi
                return
                ;;
            debug)
                if [[ ${cur} == */*/* ]]; then
                    compadd -S "" "${(@f)$(__launchctl_list_service_targets)}"
                elif [[ ${cur} == */* ]]; then
                    compadd -S "" "${(@f)$(__launchctl_list_subdomains)}"
                else
                    compadd -S "" "${(@f)$(__launchctl_list_domains)}"
                fi
                return
                ;;
            submit)
                compadd "-l" "-p" "-o" "-e"
                return
                ;;
            help)
                compadd "${(@)=${subcommands}}"
                return
                ;;
            kickstart)
                compadd "-k" "-p" "-s"
                return
                ;;
            reboot)
                compadd "-s" "system" "halt" "userspace" "reroot" "logout" "apps"
                return
                ;;
            attach)
                compadd "-k" "-s" "-x"
                return
                ;;
            bootshell)
                compadd "continue"
                return
                ;;
            procinfo|resolveport)
                compadd "${(@f)$(__launchctl_list_pids)}"
                return
                ;;
            error)
                compadd "posix" "mach" "bootstrap"
                return
                ;;
            remove|list|uncache)
                compadd "${(@f)$(__launchctl_list_labels)}"
                return
                ;;
            start)
                compadd "${(@f)$(__launchctl_list_stopped)}"
                return
                ;;
            stop)
                compadd "${(@f)$(__launchctl_list_started)}"
                return
                ;;
            kill)
                compadd "${(@f)$(__launchctl_list_sigs)}"
                return
                ;;
            bsexec)
                compadd "${(@f)$(__launchctl_list_pids)}"
                return
                ;;
            asuser)
                compadd "${(@f)$(__launchctl_list_uids)}"
                return
                ;;
            config)
                compadd "system" "user"
                return
                ;;
            load|unload)
                compadd "-w" "-F" "-S" "-D"
                _files
                return
                ;;
            limit)
                compadd "cpu" "filesize" "data" "stack" "core" "rss" "memlock" "maxproc" "maxfiles"
                return
                ;;
            getrusage)
                compadd "self" "children"
                return
                ;;
            export|shutdown|umask|bslist|bstree|getenv|setenv|unsetenv|variant|version|managerpid|manageruid|managername)
                # These commands take no arguments or have simple string arguments
                return
                ;;
        esac
    fi
    if [[ $CURRENT -eq 4 ]]; then
        case "$two_prev" in
            config)
                compadd "umask" "path"
                return
                ;;
            reboot)
                compadd "system" "halt" "userspace" "reroot" "logout" "apps"
                return
                ;;
            kill|attach|kickstart)
                if [[ ${cur} == */*/* ]]; then
                    compadd -S "" "${(@f)$(__launchctl_list_service_targets)}"
                elif [[ ${cur} == */* ]]; then
                    compadd -S "" "${(@f)$(__launchctl_list_subdomains)}"
                else
                    compadd -S "" "${(@f)$(__launchctl_list_domains)}"
                fi
                return
                ;;
            bootstrap|bootout)
                _files
                return
                ;;
            submit)
                case "$prev" in
                    -l|-p|-o|-e)
                        return
                        ;;
                esac
                ;;
        esac
    fi
    
    # Handle debug command with all its options
    if [[ $words[2] == "debug" && $CURRENT -gt 3 ]]; then
        compadd "--program" "--guard-malloc" "--malloc-stack-logging" "--malloc-nano-allocator" \
                "--debug-libraries" "--introspection-libraries" "--NSZombie" "--32" \
                "--stdin" "--stdout" "--stderr" "--environment" "--"
        return
    fi
}

if [ "$funcstack[1]" = "_launchctl" ]; then
    _launchctl "$@"
else
    compdef _launchctl launchctl
fi
